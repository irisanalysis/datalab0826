version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-datairis}
      POSTGRES_USER: ${POSTGRES_USER:-jackchan}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-jackchan} -d ${POSTGRES_DB:-datairis}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - auth_network

  # FastAPI Backend
  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-jackchan}:${POSTGRES_PASSWORD:-secure_password_123}@db:5432/${POSTGRES_DB:-datairis}
      JWT_SECRET: ${JWT_SECRET:-please_change_me}
      ACCESS_TTL: ${ACCESS_TTL:-900}
      REFRESH_TTL: ${REFRESH_TTL:-604800}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://web:3000,http://localhost:3000}
      BCRYPT_COST: 12
      COOKIE_SECURE: "false"  # Set to true in production with HTTPS
      ENVIRONMENT: ${NODE_ENV:-production}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - auth_network
    restart: unless-stopped

  # Next.js Frontend
  web:
    build:
      context: ../web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_BASE: ${NEXT_PUBLIC_API_BASE:-http://api:8000}
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_API_BASE: ${NEXT_PUBLIC_API_BASE:-http://api:8000}
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - auth_network
    restart: unless-stopped

networks:
  auth_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local